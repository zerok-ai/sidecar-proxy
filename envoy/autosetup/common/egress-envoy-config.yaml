apiVersion: v1
kind: ConfigMap
metadata:
  name: egress-envoy-config
  namespace: zerok
data:
  envoy-config.yaml: |- 
    admin:
      address:
        socket_address:
          address: 127.0.0.1
          port_value: 15000
    static_resources: 
      listeners: 
        - address:
            socket_address:
              address: 0.0.0.0
              port_value: 15001
          traffic_direction: OUTBOUND
          transparent: true
          listener_filters:
          - name: envoy.filters.listener.original_dst
            typed_config: 
              "@type": "type.googleapis.com/envoy.extensions.filters.listener.original_dst.v3.OriginalDst"
          filter_chains:
          - filters:
            - name: envoy.filters.network.tcp_proxy
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
                stat_prefix: tcp
                cluster: original_destination_cluster
                access_log:
                - name: envoy.access_loggers.stdout
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                - name: envoy.access_loggers.stderr 
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StderrAccessLog
                - name: envoy.access_loggers.file
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                    path: "/var/log/egress/access.log"
                    typed_json_format:
                      reporter: "destination"
                      start_time: "%START_TIME%"
                      duration: "%DURATION%"
                      response_code: "%RESPONSE_CODE%"
                      bytes_sent: "%BYTES_SENT%"
                      bytes_received: "%BYTES_RECEIVED%"
                      user_agent: "%REQ(USER-AGENT)%"
                      request_path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                      request_destination: "%REQ(x-envoy-original-dst-host)%"
                      request_destination_up: "%REQ(X-ENVOY-ORIGINAL-DST-HOST)%"
                      request_method: "%REQ(:METHOD)%"
                      request_id: "%REQ(X-REQUEST-ID)%"
                      type: "tcp"
                      downstream_remote_address: "%DOWNSTREAM_REMOTE_ADDRESS%"
                      downstream_local_address : "%DOWNSTREAM_LOCAL_ADDRESS%"
                      domain: "%REQ(HOST?:AUTHORITY)%"
                      upstreamstream_local_address : "%UPSTREAM_LOCAL_ADDRESS%"
                      upstream_transport_failure_reason : "%UPSTREAM_TRANSPORT_FAILURE_REASON%"
        - address:
            socket_address:
              address: 0.0.0.0
              port_value: 15002
          filter_chains:
          - filters: 
            - name: envoy.filters.network.http_connection_manager
              typed_config: 
                '@type': "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager"
                stat_prefix: egress_http
                access_log:
                - name: envoy.access_loggers.stdout
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                - name: envoy.access_loggers.stderr 
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StderrAccessLog
                - name: envoy.access_loggers.file
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                    path: "/var/log/access.log"
                    typed_json_format:
                      reporter: "destination"
                      start_time: "%START_TIME%"
                      duration: "%DURATION%"
                      response_code: "%RESPONSE_CODE%"
                      bytes_sent: "%BYTES_SENT%"
                      bytes_received: "%BYTES_RECEIVED%"
                      user_agent: "%REQ(USER-AGENT)%"
                      request_path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                      request_destination: "%REQ(x-envoy-original-dst-host)%"
                      request_destination_up: "%REQ(X-ENVOY-ORIGINAL-DST-HOST)%"
                      request_method: "%REQ(:METHOD)%"
                      request_id: "%REQ(X-REQUEST-ID)%"
                      type: "tcp"
                      downstream_remote_address: "%DOWNSTREAM_REMOTE_ADDRESS%"
                      downstream_local_address : "%DOWNSTREAM_LOCAL_ADDRESS%"
                      domain: "%REQ(HOST?:AUTHORITY)%"
                      upstreamstream_local_address : "%UPSTREAM_LOCAL_ADDRESS%"
                      upstream_transport_failure_reason : "%UPSTREAM_TRANSPORT_FAILURE_REASON%"
                http_filters:
                - name: envoy.filters.http.tap
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.tap.v3.Tap
                    common_config:
                      static_config:
                        match_config:
                          http_response_headers_match: 
                            headers:
                              name: ":status"
                              exact_match: "200"
                        output_config:
                          sinks:
                            - format: JSON_BODY_AS_STRING
                              file_per_tap:
                                path_prefix: /var/log/
                - name: envoy.filters.http.router
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
                route_config: 
                  name: default
                  virtual_hosts:
                  - name: default
                    domains: ["*"]
                    routes:
                    - match:
                        prefix: "/"
                      response_headers_to_add: 
                        - append: true
                          append_action: OVERWRITE_IF_EXISTS_OR_ADD
                          header:
                            key: zerok-source
                            value: 'collector'
                      route:
                        cluster: original_destination_cluster
      clusters: 
        - name: original_destination_cluster
          connect_timeout: 6s
          type: ORIGINAL_DST
          original_dst_lb_config:
            use_http_header: true
          connect_timeout: 6s
          lb_policy: CLUSTER_PROVIDED
          dns_lookup_family: V4_ONLY

    cluster_manager: {}